// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using demo.Server.Context;

#nullable disable

namespace demo.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230527122624_Inicio")]
    partial class Inicio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("business.Comentario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Capitulo")
                        .HasColumnType("int");

                    b.Property<long>("IdPagina")
                        .HasColumnType("bigint");

                    b.Property<int>("Verso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("business.Compartilhamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Capitulo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Livro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("Verso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Compartilhamento");
                });

            modelBuilder.Entity("business.Elementos.texto.Texto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("PalavrasTexto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Texto", (string)null);
                });

            modelBuilder.Entity("business.Filtro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CamadaDez")
                        .HasColumnType("bigint");

                    b.Property<long?>("CamadaNove")
                        .HasColumnType("bigint");

                    b.Property<long?>("CamadaOito")
                        .HasColumnType("bigint");

                    b.Property<long?>("CamadaSeis")
                        .HasColumnType("bigint");

                    b.Property<long?>("CamadaSete")
                        .HasColumnType("bigint");

                    b.Property<long?>("Grupo")
                        .HasColumnType("bigint");

                    b.Property<long>("StoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubGrupo")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubStory")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubSubGrupo")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StoryId");

                    b.ToTable("Filtro");
                });

            modelBuilder.Entity("business.Group.CamadaDez", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CamadaNoveId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CamadaNoveId");

                    b.ToTable("CamadaDez");
                });

            modelBuilder.Entity("business.Group.CamadaNove", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CamadaOitoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CamadaOitoId");

                    b.ToTable("CamadaNove");
                });

            modelBuilder.Entity("business.Group.CamadaOito", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CamadaSeteId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CamadaSeteId");

                    b.ToTable("CamadaOito");
                });

            modelBuilder.Entity("business.Group.CamadaSeis", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubSubGrupoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SubSubGrupoId");

                    b.ToTable("CamadaSeis");
                });

            modelBuilder.Entity("business.Group.CamadaSete", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CamadaSeisId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CamadaSeisId");

                    b.ToTable("CamadaSete");
                });

            modelBuilder.Entity("business.Group.Grupo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubStoryId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SubStoryId");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("business.Group.Story", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Comentario")
                        .HasColumnType("bit");

                    b.Property<bool>("Inportado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaginaPadraoLink")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Story");
                });

            modelBuilder.Entity("business.Group.SubGrupo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("GrupoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("SubGrupo");
                });

            modelBuilder.Entity("business.Group.SubStory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StoryId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StoryId");

                    b.ToTable("SubStory");
                });

            modelBuilder.Entity("business.Group.SubSubGrupo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubGrupoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SubGrupoId");

                    b.ToTable("SubSubGrupo");
                });

            modelBuilder.Entity("business.ImagemProduto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ArquivoImagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProdutoId")
                        .HasColumnType("bigint");

                    b.Property<int>("WidthImagem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ImagemProduto");
                });

            modelBuilder.Entity("business.ItemPedido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("PedidoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ProdutoId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItemPedido");
                });

            modelBuilder.Entity("business.Join.DivContainer", b =>
                {
                    b.Property<long?>("DivId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContainerId")
                        .HasColumnType("bigint");

                    b.HasKey("DivId", "ContainerId");

                    b.HasIndex("ContainerId");

                    b.ToTable("DivContainer");
                });

            modelBuilder.Entity("business.Join.DivElemento", b =>
                {
                    b.Property<long?>("DivId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ElementoId")
                        .HasColumnType("bigint");

                    b.HasKey("DivId", "ElementoId");

                    b.HasIndex("ElementoId");

                    b.ToTable("DivElemento");
                });

            modelBuilder.Entity("business.Join.PaginaContainer", b =>
                {
                    b.Property<long?>("ContainerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaginaId")
                        .HasColumnType("bigint");

                    b.HasKey("ContainerId", "PaginaId");

                    b.HasIndex("PaginaId");

                    b.ToTable("PaginaContainer");
                });

            modelBuilder.Entity("business.Livro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Capitulo")
                        .HasColumnType("int");

                    b.Property<bool>("Compartilhando")
                        .HasColumnType("bit");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("business.Pagina", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AlignItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArquivoMusic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CamadaDezId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CamadaNoveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CamadaOitoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CamadaSeisId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CamadaSeteId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Comentario")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlexDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GrupoId")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagemContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Layout")
                        .HasColumnType("bit");

                    b.Property<bool>("Music")
                        .HasColumnType("bit");

                    b.Property<string>("Sobreescrita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubGrupoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubStoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubSubGrupoId")
                        .HasColumnType("bigint");

                    b.Property<int>("Tempo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CamadaDezId");

                    b.HasIndex("CamadaNoveId");

                    b.HasIndex("CamadaOitoId");

                    b.HasIndex("CamadaSeisId");

                    b.HasIndex("CamadaSeteId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("StoryId");

                    b.HasIndex("SubGrupoId");

                    b.HasIndex("SubStoryId");

                    b.HasIndex("SubSubGrupoId");

                    b.ToTable("Pagina");
                });

            modelBuilder.Entity("business.Pedido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("business.Produto", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantEstoque")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("business.Telefone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDD_Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDD_Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("business.VideoIncorporado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ArquivoVideoIncorporado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tamanho")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VideoIncorporado");
                });

            modelBuilder.Entity("business.div.Container", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AlignItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlignSelf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BorderRadius")
                        .HasColumnType("int");

                    b.Property<string>("ClassesModificadoras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Content")
                        .HasColumnType("bit");

                    b.Property<string>("FlexDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlexWrap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("JustifyContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("Padding")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Container");
                });

            modelBuilder.Entity("business.div.Div", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AlignItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlignSelf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BorderRadius")
                        .HasColumnType("int");

                    b.Property<string>("ClassesModificadoras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Content")
                        .HasColumnType("bit");

                    b.Property<string>("FlexDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlexWrap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("JustifyContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("Padding")
                        .HasColumnType("int");

                    b.Property<long>("Pagina_")
                        .HasColumnType("bigint");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Div", (string)null);
                });

            modelBuilder.Entity("business.Filtro", b =>
                {
                    b.HasOne("business.Group.Story", "Story")
                        .WithMany("Filtro")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Story");
                });

            modelBuilder.Entity("business.Group.CamadaDez", b =>
                {
                    b.HasOne("business.Group.CamadaNove", "CamadaNove")
                        .WithMany("CamadaDez")
                        .HasForeignKey("CamadaNoveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CamadaNove");
                });

            modelBuilder.Entity("business.Group.CamadaNove", b =>
                {
                    b.HasOne("business.Group.CamadaOito", "CamadaOito")
                        .WithMany("CamadaNove")
                        .HasForeignKey("CamadaOitoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CamadaOito");
                });

            modelBuilder.Entity("business.Group.CamadaOito", b =>
                {
                    b.HasOne("business.Group.CamadaSete", "CamadaSete")
                        .WithMany("CamadaOito")
                        .HasForeignKey("CamadaSeteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CamadaSete");
                });

            modelBuilder.Entity("business.Group.CamadaSeis", b =>
                {
                    b.HasOne("business.Group.SubSubGrupo", "SubSubGrupo")
                        .WithMany("CamadaSeis")
                        .HasForeignKey("SubSubGrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubSubGrupo");
                });

            modelBuilder.Entity("business.Group.CamadaSete", b =>
                {
                    b.HasOne("business.Group.CamadaSeis", "CamadaSeis")
                        .WithMany("CamadaSete")
                        .HasForeignKey("CamadaSeisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CamadaSeis");
                });

            modelBuilder.Entity("business.Group.Grupo", b =>
                {
                    b.HasOne("business.Group.SubStory", "SubStory")
                        .WithMany("Grupo")
                        .HasForeignKey("SubStoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubStory");
                });

            modelBuilder.Entity("business.Group.SubGrupo", b =>
                {
                    b.HasOne("business.Group.Grupo", "Grupo")
                        .WithMany("SubGrupo")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("business.Group.SubStory", b =>
                {
                    b.HasOne("business.Group.Story", "Story")
                        .WithMany("SubStory")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Story");
                });

            modelBuilder.Entity("business.Group.SubSubGrupo", b =>
                {
                    b.HasOne("business.Group.SubGrupo", "SubGrupo")
                        .WithMany("SubSubGrupo")
                        .HasForeignKey("SubGrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubGrupo");
                });

            modelBuilder.Entity("business.ImagemProduto", b =>
                {
                    b.HasOne("business.Produto", "Produto")
                        .WithMany("Imagem")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("business.ItemPedido", b =>
                {
                    b.HasOne("business.Pedido", "Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("business.Produto", "Produto")
                        .WithMany("Itens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("business.Join.DivContainer", b =>
                {
                    b.HasOne("business.div.Container", "Container")
                        .WithMany("Div")
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("business.div.Div", "Div")
                        .WithMany("Container")
                        .HasForeignKey("DivId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Container");

                    b.Navigation("Div");
                });

            modelBuilder.Entity("business.Join.DivElemento", b =>
                {
                    b.HasOne("business.div.Div", "Div")
                        .WithMany("Elemento")
                        .HasForeignKey("DivId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("business.Elementos.texto.Texto", "Elemento")
                        .WithMany()
                        .HasForeignKey("ElementoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Div");

                    b.Navigation("Elemento");
                });

            modelBuilder.Entity("business.Join.PaginaContainer", b =>
                {
                    b.HasOne("business.div.Container", "Container")
                        .WithMany("PaginaContainer")
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("business.Pagina", "Pagina")
                        .WithMany("Div")
                        .HasForeignKey("PaginaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Container");

                    b.Navigation("Pagina");
                });

            modelBuilder.Entity("business.Pagina", b =>
                {
                    b.HasOne("business.Group.CamadaDez", "CamadaDez")
                        .WithMany("Pagina")
                        .HasForeignKey("CamadaDezId");

                    b.HasOne("business.Group.CamadaNove", "CamadaNove")
                        .WithMany("Pagina")
                        .HasForeignKey("CamadaNoveId");

                    b.HasOne("business.Group.CamadaOito", "CamadaOito")
                        .WithMany("Pagina")
                        .HasForeignKey("CamadaOitoId");

                    b.HasOne("business.Group.CamadaSeis", "CamadaSeis")
                        .WithMany("Pagina")
                        .HasForeignKey("CamadaSeisId");

                    b.HasOne("business.Group.CamadaSete", "CamadaSete")
                        .WithMany("Pagina")
                        .HasForeignKey("CamadaSeteId");

                    b.HasOne("business.Group.Grupo", "Grupo")
                        .WithMany("Pagina")
                        .HasForeignKey("GrupoId");

                    b.HasOne("business.Group.Story", "Story")
                        .WithMany("Pagina")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("business.Group.SubGrupo", "SubGrupo")
                        .WithMany("Pagina")
                        .HasForeignKey("SubGrupoId");

                    b.HasOne("business.Group.SubStory", "SubStory")
                        .WithMany("Pagina")
                        .HasForeignKey("SubStoryId");

                    b.HasOne("business.Group.SubSubGrupo", "SubSubGrupo")
                        .WithMany("Pagina")
                        .HasForeignKey("SubSubGrupoId");

                    b.Navigation("CamadaDez");

                    b.Navigation("CamadaNove");

                    b.Navigation("CamadaOito");

                    b.Navigation("CamadaSeis");

                    b.Navigation("CamadaSete");

                    b.Navigation("Grupo");

                    b.Navigation("Story");

                    b.Navigation("SubGrupo");

                    b.Navigation("SubStory");

                    b.Navigation("SubSubGrupo");
                });

            modelBuilder.Entity("business.Produto", b =>
                {
                    b.HasOne("business.Pagina", "Pagina")
                        .WithOne("Produto")
                        .HasForeignKey("business.Produto", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pagina");
                });

            modelBuilder.Entity("business.Group.CamadaDez", b =>
                {
                    b.Navigation("Pagina");
                });

            modelBuilder.Entity("business.Group.CamadaNove", b =>
                {
                    b.Navigation("CamadaDez");

                    b.Navigation("Pagina");
                });

            modelBuilder.Entity("business.Group.CamadaOito", b =>
                {
                    b.Navigation("CamadaNove");

                    b.Navigation("Pagina");
                });

            modelBuilder.Entity("business.Group.CamadaSeis", b =>
                {
                    b.Navigation("CamadaSete");

                    b.Navigation("Pagina");
                });

            modelBuilder.Entity("business.Group.CamadaSete", b =>
                {
                    b.Navigation("CamadaOito");

                    b.Navigation("Pagina");
                });

            modelBuilder.Entity("business.Group.Grupo", b =>
                {
                    b.Navigation("Pagina");

                    b.Navigation("SubGrupo");
                });

            modelBuilder.Entity("business.Group.Story", b =>
                {
                    b.Navigation("Filtro");

                    b.Navigation("Pagina");

                    b.Navigation("SubStory");
                });

            modelBuilder.Entity("business.Group.SubGrupo", b =>
                {
                    b.Navigation("Pagina");

                    b.Navigation("SubSubGrupo");
                });

            modelBuilder.Entity("business.Group.SubStory", b =>
                {
                    b.Navigation("Grupo");

                    b.Navigation("Pagina");
                });

            modelBuilder.Entity("business.Group.SubSubGrupo", b =>
                {
                    b.Navigation("CamadaSeis");

                    b.Navigation("Pagina");
                });

            modelBuilder.Entity("business.Pagina", b =>
                {
                    b.Navigation("Div");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("business.Pedido", b =>
                {
                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("business.Produto", b =>
                {
                    b.Navigation("Imagem");

                    b.Navigation("Itens");
                });

            modelBuilder.Entity("business.div.Container", b =>
                {
                    b.Navigation("Div");

                    b.Navigation("PaginaContainer");
                });

            modelBuilder.Entity("business.div.Div", b =>
                {
                    b.Navigation("Container");

                    b.Navigation("Elemento");
                });
#pragma warning restore 612, 618
        }
    }
}
